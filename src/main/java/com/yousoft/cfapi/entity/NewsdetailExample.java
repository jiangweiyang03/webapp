package com.yousoft.cfapi.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Date;
import java.util.Iterator;

public class NewsdetailExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table API.NEWSDETAIL
	 * @mbggenerated  Thu Jul 02 15:37:39 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table API.NEWSDETAIL
	 * @mbggenerated  Thu Jul 02 15:37:39 CST 2015
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table API.NEWSDETAIL
	 * @mbggenerated  Thu Jul 02 15:37:39 CST 2015
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table API.NEWSDETAIL
	 * @mbggenerated  Thu Jul 02 15:37:39 CST 2015
	 */
	public NewsdetailExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table API.NEWSDETAIL
	 * @mbggenerated  Thu Jul 02 15:37:39 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table API.NEWSDETAIL
	 * @mbggenerated  Thu Jul 02 15:37:39 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table API.NEWSDETAIL
	 * @mbggenerated  Thu Jul 02 15:37:39 CST 2015
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table API.NEWSDETAIL
	 * @mbggenerated  Thu Jul 02 15:37:39 CST 2015
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table API.NEWSDETAIL
	 * @mbggenerated  Thu Jul 02 15:37:39 CST 2015
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table API.NEWSDETAIL
	 * @mbggenerated  Thu Jul 02 15:37:39 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table API.NEWSDETAIL
	 * @mbggenerated  Thu Jul 02 15:37:39 CST 2015
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table API.NEWSDETAIL
	 * @mbggenerated  Thu Jul 02 15:37:39 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table API.NEWSDETAIL
	 * @mbggenerated  Thu Jul 02 15:37:39 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table API.NEWSDETAIL
	 * @mbggenerated  Thu Jul 02 15:37:39 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table API.NEWSDETAIL
	 * @mbggenerated  Thu Jul 02 15:37:39 CST 2015
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andTextidIsNull() {
			addCriterion("TEXTID is null");
			return (Criteria) this;
		}

		public Criteria andTextidIsNotNull() {
			addCriterion("TEXTID is not null");
			return (Criteria) this;
		}

		public Criteria andTextidEqualTo(BigDecimal value) {
			addCriterion("TEXTID =", value, "textid");
			return (Criteria) this;
		}

		public Criteria andTextidNotEqualTo(BigDecimal value) {
			addCriterion("TEXTID <>", value, "textid");
			return (Criteria) this;
		}

		public Criteria andTextidGreaterThan(BigDecimal value) {
			addCriterion("TEXTID >", value, "textid");
			return (Criteria) this;
		}

		public Criteria andTextidGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("TEXTID >=", value, "textid");
			return (Criteria) this;
		}

		public Criteria andTextidLessThan(BigDecimal value) {
			addCriterion("TEXTID <", value, "textid");
			return (Criteria) this;
		}

		public Criteria andTextidLessThanOrEqualTo(BigDecimal value) {
			addCriterion("TEXTID <=", value, "textid");
			return (Criteria) this;
		}

		public Criteria andTextidIn(List<BigDecimal> values) {
			addCriterion("TEXTID in", values, "textid");
			return (Criteria) this;
		}

		public Criteria andTextidNotIn(List<BigDecimal> values) {
			addCriterion("TEXTID not in", values, "textid");
			return (Criteria) this;
		}

		public Criteria andTextidBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("TEXTID between", value1, value2, "textid");
			return (Criteria) this;
		}

		public Criteria andTextidNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("TEXTID not between", value1, value2, "textid");
			return (Criteria) this;
		}

		public Criteria andUsersrcIsNull() {
			addCriterion("USERSRC is null");
			return (Criteria) this;
		}

		public Criteria andUsersrcIsNotNull() {
			addCriterion("USERSRC is not null");
			return (Criteria) this;
		}

		public Criteria andUsersrcEqualTo(String value) {
			addCriterion("USERSRC =", value, "usersrc");
			return (Criteria) this;
		}

		public Criteria andUsersrcNotEqualTo(String value) {
			addCriterion("USERSRC <>", value, "usersrc");
			return (Criteria) this;
		}

		public Criteria andUsersrcGreaterThan(String value) {
			addCriterion("USERSRC >", value, "usersrc");
			return (Criteria) this;
		}

		public Criteria andUsersrcGreaterThanOrEqualTo(String value) {
			addCriterion("USERSRC >=", value, "usersrc");
			return (Criteria) this;
		}

		public Criteria andUsersrcLessThan(String value) {
			addCriterion("USERSRC <", value, "usersrc");
			return (Criteria) this;
		}

		public Criteria andUsersrcLessThanOrEqualTo(String value) {
			addCriterion("USERSRC <=", value, "usersrc");
			return (Criteria) this;
		}

		public Criteria andUsersrcLike(String value) {
			addCriterion("USERSRC like", value, "usersrc");
			return (Criteria) this;
		}

		public Criteria andUsersrcNotLike(String value) {
			addCriterion("USERSRC not like", value, "usersrc");
			return (Criteria) this;
		}

		public Criteria andUsersrcIn(List<String> values) {
			addCriterion("USERSRC in", values, "usersrc");
			return (Criteria) this;
		}

		public Criteria andUsersrcNotIn(List<String> values) {
			addCriterion("USERSRC not in", values, "usersrc");
			return (Criteria) this;
		}

		public Criteria andUsersrcBetween(String value1, String value2) {
			addCriterion("USERSRC between", value1, value2, "usersrc");
			return (Criteria) this;
		}

		public Criteria andUsersrcNotBetween(String value1, String value2) {
			addCriterion("USERSRC not between", value1, value2, "usersrc");
			return (Criteria) this;
		}

		public Criteria andUserdestIsNull() {
			addCriterion("USERDEST is null");
			return (Criteria) this;
		}

		public Criteria andUserdestIsNotNull() {
			addCriterion("USERDEST is not null");
			return (Criteria) this;
		}

		public Criteria andUserdestEqualTo(String value) {
			addCriterion("USERDEST =", value, "userdest");
			return (Criteria) this;
		}

		public Criteria andUserdestNotEqualTo(String value) {
			addCriterion("USERDEST <>", value, "userdest");
			return (Criteria) this;
		}

		public Criteria andUserdestGreaterThan(String value) {
			addCriterion("USERDEST >", value, "userdest");
			return (Criteria) this;
		}

		public Criteria andUserdestGreaterThanOrEqualTo(String value) {
			addCriterion("USERDEST >=", value, "userdest");
			return (Criteria) this;
		}

		public Criteria andUserdestLessThan(String value) {
			addCriterion("USERDEST <", value, "userdest");
			return (Criteria) this;
		}

		public Criteria andUserdestLessThanOrEqualTo(String value) {
			addCriterion("USERDEST <=", value, "userdest");
			return (Criteria) this;
		}

		public Criteria andUserdestLike(String value) {
			addCriterion("USERDEST like", value, "userdest");
			return (Criteria) this;
		}

		public Criteria andUserdestNotLike(String value) {
			addCriterion("USERDEST not like", value, "userdest");
			return (Criteria) this;
		}

		public Criteria andUserdestIn(List<String> values) {
			addCriterion("USERDEST in", values, "userdest");
			return (Criteria) this;
		}

		public Criteria andUserdestNotIn(List<String> values) {
			addCriterion("USERDEST not in", values, "userdest");
			return (Criteria) this;
		}

		public Criteria andUserdestBetween(String value1, String value2) {
			addCriterion("USERDEST between", value1, value2, "userdest");
			return (Criteria) this;
		}

		public Criteria andUserdestNotBetween(String value1, String value2) {
			addCriterion("USERDEST not between", value1, value2, "userdest");
			return (Criteria) this;
		}

		public Criteria andNewstypeIsNull() {
			addCriterion("NEWSTYPE is null");
			return (Criteria) this;
		}

		public Criteria andNewstypeIsNotNull() {
			addCriterion("NEWSTYPE is not null");
			return (Criteria) this;
		}

		public Criteria andNewstypeEqualTo(BigDecimal value) {
			addCriterion("NEWSTYPE =", value, "newstype");
			return (Criteria) this;
		}

		public Criteria andNewstypeNotEqualTo(BigDecimal value) {
			addCriterion("NEWSTYPE <>", value, "newstype");
			return (Criteria) this;
		}

		public Criteria andNewstypeGreaterThan(BigDecimal value) {
			addCriterion("NEWSTYPE >", value, "newstype");
			return (Criteria) this;
		}

		public Criteria andNewstypeGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("NEWSTYPE >=", value, "newstype");
			return (Criteria) this;
		}

		public Criteria andNewstypeLessThan(BigDecimal value) {
			addCriterion("NEWSTYPE <", value, "newstype");
			return (Criteria) this;
		}

		public Criteria andNewstypeLessThanOrEqualTo(BigDecimal value) {
			addCriterion("NEWSTYPE <=", value, "newstype");
			return (Criteria) this;
		}

		public Criteria andNewstypeIn(List<BigDecimal> values) {
			addCriterion("NEWSTYPE in", values, "newstype");
			return (Criteria) this;
		}

		public Criteria andNewstypeNotIn(List<BigDecimal> values) {
			addCriterion("NEWSTYPE not in", values, "newstype");
			return (Criteria) this;
		}

		public Criteria andNewstypeBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("NEWSTYPE between", value1, value2, "newstype");
			return (Criteria) this;
		}

		public Criteria andNewstypeNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("NEWSTYPE not between", value1, value2, "newstype");
			return (Criteria) this;
		}

		public Criteria andContentIsNull() {
			addCriterion("CONTENT is null");
			return (Criteria) this;
		}

		public Criteria andContentIsNotNull() {
			addCriterion("CONTENT is not null");
			return (Criteria) this;
		}

		public Criteria andContentEqualTo(String value) {
			addCriterion("CONTENT =", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotEqualTo(String value) {
			addCriterion("CONTENT <>", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentGreaterThan(String value) {
			addCriterion("CONTENT >", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentGreaterThanOrEqualTo(String value) {
			addCriterion("CONTENT >=", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentLessThan(String value) {
			addCriterion("CONTENT <", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentLessThanOrEqualTo(String value) {
			addCriterion("CONTENT <=", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentLike(String value) {
			addCriterion("CONTENT like", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotLike(String value) {
			addCriterion("CONTENT not like", value, "content");
			return (Criteria) this;
		}

		public Criteria andContentIn(List<String> values) {
			addCriterion("CONTENT in", values, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotIn(List<String> values) {
			addCriterion("CONTENT not in", values, "content");
			return (Criteria) this;
		}

		public Criteria andContentBetween(String value1, String value2) {
			addCriterion("CONTENT between", value1, value2, "content");
			return (Criteria) this;
		}

		public Criteria andContentNotBetween(String value1, String value2) {
			addCriterion("CONTENT not between", value1, value2, "content");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIsNull() {
			addCriterion("CREATETIME is null");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIsNotNull() {
			addCriterion("CREATETIME is not null");
			return (Criteria) this;
		}

		public Criteria andCreatetimeEqualTo(Date value) {
			addCriterionForJDBCDate("CREATETIME =", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("CREATETIME <>", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeGreaterThan(Date value) {
			addCriterionForJDBCDate("CREATETIME >", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATETIME >=", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLessThan(Date value) {
			addCriterionForJDBCDate("CREATETIME <", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATETIME <=", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIn(List<Date> values) {
			addCriterionForJDBCDate("CREATETIME in", values, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("CREATETIME not in", values, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATETIME between", value1, value2,
					"createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATETIME not between", value1, value2,
					"createtime");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table API.NEWSDETAIL
	 * @mbggenerated  Thu Jul 02 15:37:39 CST 2015
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table API.NEWSDETAIL
     *
     * @mbggenerated do_not_delete_during_merge Thu Jul 02 15:31:25 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}