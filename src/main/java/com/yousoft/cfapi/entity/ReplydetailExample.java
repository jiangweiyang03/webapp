package com.yousoft.cfapi.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ReplydetailExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table API.REPLYDETAIL
     *
     * @mbggenerated Tue Jun 30 11:46:27 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table API.REPLYDETAIL
     *
     * @mbggenerated Tue Jun 30 11:46:27 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table API.REPLYDETAIL
     *
     * @mbggenerated Tue Jun 30 11:46:27 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table API.REPLYDETAIL
     *
     * @mbggenerated Tue Jun 30 11:46:27 CST 2015
     */
    public ReplydetailExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table API.REPLYDETAIL
     *
     * @mbggenerated Tue Jun 30 11:46:27 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table API.REPLYDETAIL
     *
     * @mbggenerated Tue Jun 30 11:46:27 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table API.REPLYDETAIL
     *
     * @mbggenerated Tue Jun 30 11:46:27 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table API.REPLYDETAIL
     *
     * @mbggenerated Tue Jun 30 11:46:27 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table API.REPLYDETAIL
     *
     * @mbggenerated Tue Jun 30 11:46:27 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table API.REPLYDETAIL
     *
     * @mbggenerated Tue Jun 30 11:46:27 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table API.REPLYDETAIL
     *
     * @mbggenerated Tue Jun 30 11:46:27 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table API.REPLYDETAIL
     *
     * @mbggenerated Tue Jun 30 11:46:27 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table API.REPLYDETAIL
     *
     * @mbggenerated Tue Jun 30 11:46:27 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table API.REPLYDETAIL
     *
     * @mbggenerated Tue Jun 30 11:46:27 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table API.REPLYDETAIL
     *
     * @mbggenerated Tue Jun 30 11:46:27 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andTextidIsNull() {
            addCriterion("TEXTID is null");
            return (Criteria) this;
        }

        public Criteria andTextidIsNotNull() {
            addCriterion("TEXTID is not null");
            return (Criteria) this;
        }

        public Criteria andTextidEqualTo(BigDecimal value) {
            addCriterion("TEXTID =", value, "textid");
            return (Criteria) this;
        }

        public Criteria andTextidNotEqualTo(BigDecimal value) {
            addCriterion("TEXTID <>", value, "textid");
            return (Criteria) this;
        }

        public Criteria andTextidGreaterThan(BigDecimal value) {
            addCriterion("TEXTID >", value, "textid");
            return (Criteria) this;
        }

        public Criteria andTextidGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("TEXTID >=", value, "textid");
            return (Criteria) this;
        }

        public Criteria andTextidLessThan(BigDecimal value) {
            addCriterion("TEXTID <", value, "textid");
            return (Criteria) this;
        }

        public Criteria andTextidLessThanOrEqualTo(BigDecimal value) {
            addCriterion("TEXTID <=", value, "textid");
            return (Criteria) this;
        }

        public Criteria andTextidIn(List<BigDecimal> values) {
            addCriterion("TEXTID in", values, "textid");
            return (Criteria) this;
        }

        public Criteria andTextidNotIn(List<BigDecimal> values) {
            addCriterion("TEXTID not in", values, "textid");
            return (Criteria) this;
        }

        public Criteria andTextidBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TEXTID between", value1, value2, "textid");
            return (Criteria) this;
        }

        public Criteria andTextidNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TEXTID not between", value1, value2, "textid");
            return (Criteria) this;
        }

        public Criteria andReplyIsNull() {
            addCriterion("REPLY is null");
            return (Criteria) this;
        }

        public Criteria andReplyIsNotNull() {
            addCriterion("REPLY is not null");
            return (Criteria) this;
        }

        public Criteria andReplyEqualTo(String value) {
            addCriterion("REPLY =", value, "reply");
            return (Criteria) this;
        }

        public Criteria andReplyNotEqualTo(String value) {
            addCriterion("REPLY <>", value, "reply");
            return (Criteria) this;
        }

        public Criteria andReplyGreaterThan(String value) {
            addCriterion("REPLY >", value, "reply");
            return (Criteria) this;
        }

        public Criteria andReplyGreaterThanOrEqualTo(String value) {
            addCriterion("REPLY >=", value, "reply");
            return (Criteria) this;
        }

        public Criteria andReplyLessThan(String value) {
            addCriterion("REPLY <", value, "reply");
            return (Criteria) this;
        }

        public Criteria andReplyLessThanOrEqualTo(String value) {
            addCriterion("REPLY <=", value, "reply");
            return (Criteria) this;
        }

        public Criteria andReplyLike(String value) {
            addCriterion("REPLY like", value, "reply");
            return (Criteria) this;
        }

        public Criteria andReplyNotLike(String value) {
            addCriterion("REPLY not like", value, "reply");
            return (Criteria) this;
        }

        public Criteria andReplyIn(List<String> values) {
            addCriterion("REPLY in", values, "reply");
            return (Criteria) this;
        }

        public Criteria andReplyNotIn(List<String> values) {
            addCriterion("REPLY not in", values, "reply");
            return (Criteria) this;
        }

        public Criteria andReplyBetween(String value1, String value2) {
            addCriterion("REPLY between", value1, value2, "reply");
            return (Criteria) this;
        }

        public Criteria andReplyNotBetween(String value1, String value2) {
            addCriterion("REPLY not between", value1, value2, "reply");
            return (Criteria) this;
        }

        public Criteria andUserfromIsNull() {
            addCriterion("USERFROM is null");
            return (Criteria) this;
        }

        public Criteria andUserfromIsNotNull() {
            addCriterion("USERFROM is not null");
            return (Criteria) this;
        }

        public Criteria andUserfromEqualTo(String value) {
            addCriterion("USERFROM =", value, "userfrom");
            return (Criteria) this;
        }

        public Criteria andUserfromNotEqualTo(String value) {
            addCriterion("USERFROM <>", value, "userfrom");
            return (Criteria) this;
        }

        public Criteria andUserfromGreaterThan(String value) {
            addCriterion("USERFROM >", value, "userfrom");
            return (Criteria) this;
        }

        public Criteria andUserfromGreaterThanOrEqualTo(String value) {
            addCriterion("USERFROM >=", value, "userfrom");
            return (Criteria) this;
        }

        public Criteria andUserfromLessThan(String value) {
            addCriterion("USERFROM <", value, "userfrom");
            return (Criteria) this;
        }

        public Criteria andUserfromLessThanOrEqualTo(String value) {
            addCriterion("USERFROM <=", value, "userfrom");
            return (Criteria) this;
        }

        public Criteria andUserfromLike(String value) {
            addCriterion("USERFROM like", value, "userfrom");
            return (Criteria) this;
        }

        public Criteria andUserfromNotLike(String value) {
            addCriterion("USERFROM not like", value, "userfrom");
            return (Criteria) this;
        }

        public Criteria andUserfromIn(List<String> values) {
            addCriterion("USERFROM in", values, "userfrom");
            return (Criteria) this;
        }

        public Criteria andUserfromNotIn(List<String> values) {
            addCriterion("USERFROM not in", values, "userfrom");
            return (Criteria) this;
        }

        public Criteria andUserfromBetween(String value1, String value2) {
            addCriterion("USERFROM between", value1, value2, "userfrom");
            return (Criteria) this;
        }

        public Criteria andUserfromNotBetween(String value1, String value2) {
            addCriterion("USERFROM not between", value1, value2, "userfrom");
            return (Criteria) this;
        }

        public Criteria andUsertoIsNull() {
            addCriterion("USERTO is null");
            return (Criteria) this;
        }

        public Criteria andUsertoIsNotNull() {
            addCriterion("USERTO is not null");
            return (Criteria) this;
        }

        public Criteria andUsertoEqualTo(String value) {
            addCriterion("USERTO =", value, "userto");
            return (Criteria) this;
        }

        public Criteria andUsertoNotEqualTo(String value) {
            addCriterion("USERTO <>", value, "userto");
            return (Criteria) this;
        }

        public Criteria andUsertoGreaterThan(String value) {
            addCriterion("USERTO >", value, "userto");
            return (Criteria) this;
        }

        public Criteria andUsertoGreaterThanOrEqualTo(String value) {
            addCriterion("USERTO >=", value, "userto");
            return (Criteria) this;
        }

        public Criteria andUsertoLessThan(String value) {
            addCriterion("USERTO <", value, "userto");
            return (Criteria) this;
        }

        public Criteria andUsertoLessThanOrEqualTo(String value) {
            addCriterion("USERTO <=", value, "userto");
            return (Criteria) this;
        }

        public Criteria andUsertoLike(String value) {
            addCriterion("USERTO like", value, "userto");
            return (Criteria) this;
        }

        public Criteria andUsertoNotLike(String value) {
            addCriterion("USERTO not like", value, "userto");
            return (Criteria) this;
        }

        public Criteria andUsertoIn(List<String> values) {
            addCriterion("USERTO in", values, "userto");
            return (Criteria) this;
        }

        public Criteria andUsertoNotIn(List<String> values) {
            addCriterion("USERTO not in", values, "userto");
            return (Criteria) this;
        }

        public Criteria andUsertoBetween(String value1, String value2) {
            addCriterion("USERTO between", value1, value2, "userto");
            return (Criteria) this;
        }

        public Criteria andUsertoNotBetween(String value1, String value2) {
            addCriterion("USERTO not between", value1, value2, "userto");
            return (Criteria) this;
        }

        public Criteria andReplytypeIsNull() {
            addCriterion("REPLYTYPE is null");
            return (Criteria) this;
        }

        public Criteria andReplytypeIsNotNull() {
            addCriterion("REPLYTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andReplytypeEqualTo(BigDecimal value) {
            addCriterion("REPLYTYPE =", value, "replytype");
            return (Criteria) this;
        }

        public Criteria andReplytypeNotEqualTo(BigDecimal value) {
            addCriterion("REPLYTYPE <>", value, "replytype");
            return (Criteria) this;
        }

        public Criteria andReplytypeGreaterThan(BigDecimal value) {
            addCriterion("REPLYTYPE >", value, "replytype");
            return (Criteria) this;
        }

        public Criteria andReplytypeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("REPLYTYPE >=", value, "replytype");
            return (Criteria) this;
        }

        public Criteria andReplytypeLessThan(BigDecimal value) {
            addCriterion("REPLYTYPE <", value, "replytype");
            return (Criteria) this;
        }

        public Criteria andReplytypeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("REPLYTYPE <=", value, "replytype");
            return (Criteria) this;
        }

        public Criteria andReplytypeIn(List<BigDecimal> values) {
            addCriterion("REPLYTYPE in", values, "replytype");
            return (Criteria) this;
        }

        public Criteria andReplytypeNotIn(List<BigDecimal> values) {
            addCriterion("REPLYTYPE not in", values, "replytype");
            return (Criteria) this;
        }

        public Criteria andReplytypeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("REPLYTYPE between", value1, value2, "replytype");
            return (Criteria) this;
        }

        public Criteria andReplytypeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("REPLYTYPE not between", value1, value2, "replytype");
            return (Criteria) this;
        }

        public Criteria andReplytimeIsNull() {
            addCriterion("REPLYTIME is null");
            return (Criteria) this;
        }

        public Criteria andReplytimeIsNotNull() {
            addCriterion("REPLYTIME is not null");
            return (Criteria) this;
        }

        public Criteria andReplytimeEqualTo(Date value) {
            addCriterionForJDBCDate("REPLYTIME =", value, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("REPLYTIME <>", value, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeGreaterThan(Date value) {
            addCriterionForJDBCDate("REPLYTIME >", value, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("REPLYTIME >=", value, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeLessThan(Date value) {
            addCriterionForJDBCDate("REPLYTIME <", value, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("REPLYTIME <=", value, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeIn(List<Date> values) {
            addCriterionForJDBCDate("REPLYTIME in", values, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("REPLYTIME not in", values, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("REPLYTIME between", value1, value2, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("REPLYTIME not between", value1, value2, "replytime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table API.REPLYDETAIL
     *
     * @mbggenerated do_not_delete_during_merge Tue Jun 30 11:46:27 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table API.REPLYDETAIL
     *
     * @mbggenerated Tue Jun 30 11:46:27 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}